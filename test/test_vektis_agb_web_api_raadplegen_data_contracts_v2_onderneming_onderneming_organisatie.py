# coding: utf-8

"""
    Vektis.AGB.WebAPI.Raadplegen (test-agb-api.vektis.nl/) v2

    De raadpleegdienst biedt de mogelijkheid voor diverse bevragingen op AGB. De informatie die beschikbaar is, kan gebruikt worden voor het aanvragen van AGB-codes met de aanvraagdienst.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vektis_api.models.vektis_agb_web_api_raadplegen_data_contracts_v2_onderneming_onderneming_organisatie import VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie

class TestVektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie(unittest.TestCase):
    """VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie:
        """Test VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie`
        """
        model = VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie()
        if include_optional:
            return VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie(
                aanvang_agb_code = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                einde_agb_code = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                agb_code = '01234567',
                correspondentie_adres = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/v2/onderneming/adres.Vektis.AGB.WebAPI.Raadplegen.DataContracts.v2.Onderneming.Adres(
                    aanvang = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    einde = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    huisnummer = 56, 
                    huisnummer_toevoeging = '', 
                    plaats = '0', 
                    postcode = '0', 
                    straat = '0', ),
                naam = '0',
                vestigingen = [
                    vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/v2/onderneming/vestiging_organisatie.Vektis.AGB.WebAPI.Raadplegen.DataContracts.v2.Onderneming.VestigingOrganisatie(
                        aanvang_agb_code = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        einde_agb_code = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        aanvang_relatie = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        einde_relatie = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        agb_code = '01234567', 
                        bezoek_adres = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/v2/onderneming/adres.Vektis.AGB.WebAPI.Raadplegen.DataContracts.v2.Onderneming.Adres(
                            aanvang = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            einde = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            huisnummer = 56, 
                            huisnummer_toevoeging = '', 
                            plaats = '0', 
                            postcode = '0', 
                            straat = '0', ), 
                        naam = '0', )
                    ]
            )
        else:
            return VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie(
                aanvang_agb_code = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                agb_code = '01234567',
                naam = '0',
                vestigingen = [
                    vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/v2/onderneming/vestiging_organisatie.Vektis.AGB.WebAPI.Raadplegen.DataContracts.v2.Onderneming.VestigingOrganisatie(
                        aanvang_agb_code = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        einde_agb_code = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        aanvang_relatie = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        einde_relatie = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        agb_code = '01234567', 
                        bezoek_adres = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/v2/onderneming/adres.Vektis.AGB.WebAPI.Raadplegen.DataContracts.v2.Onderneming.Adres(
                            aanvang = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            einde = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            huisnummer = 56, 
                            huisnummer_toevoeging = '', 
                            plaats = '0', 
                            postcode = '0', 
                            straat = '0', ), 
                        naam = '0', )
                    ],
        )
        """

    def testVektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie(self):
        """Test VektisAGBWebAPIRaadplegenDataContractsV2OndernemingOndernemingOrganisatie"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
