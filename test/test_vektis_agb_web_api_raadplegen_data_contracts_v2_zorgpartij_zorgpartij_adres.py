# coding: utf-8

"""
    Vektis.AGB.WebAPI.Raadplegen (test-agb-api.vektis.nl/) v2

    De raadpleegdienst biedt de mogelijkheid voor diverse bevragingen op AGB. De informatie die beschikbaar is, kan gebruikt worden voor het aanvragen van AGB-codes met de aanvraagdienst.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vektis_api.models.vektis_agb_web_api_raadplegen_data_contracts_v2_zorgpartij_zorgpartij_adres import VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres

class TestVektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres(unittest.TestCase):
    """VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres:
        """Test VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres`
        """
        model = VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres()
        if include_optional:
            return VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres(
                aanvang = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                einde = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                huisnummer = 56,
                huisnummer_toevoeging = '',
                land = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/referentiegegevens/land.Vektis.AGB.WebAPI.Raadplegen.DataContracts.Referentiegegevens.Land(
                    code = '0', 
                    omschrijving = '0', ),
                plaats = '0',
                postcode = '0',
                provincie = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/referentiegegevens/provincie.Vektis.AGB.WebAPI.Raadplegen.DataContracts.Referentiegegevens.Provincie(
                    code = '0', 
                    omschrijving = '0', ),
                straat = '0',
                type = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/referentiegegevens/adres_type.Vektis.AGB.WebAPI.Raadplegen.DataContracts.Referentiegegevens.AdresType(
                    code = '0', 
                    omschrijving = '0', )
            )
        else:
            return VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres(
                aanvang = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                huisnummer = 56,
                land = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/referentiegegevens/land.Vektis.AGB.WebAPI.Raadplegen.DataContracts.Referentiegegevens.Land(
                    code = '0', 
                    omschrijving = '0', ),
                plaats = '0',
                postcode = '0',
                straat = '0',
                type = vektis_api.models.vektis/agb/web_api/raadplegen/data_contracts/referentiegegevens/adres_type.Vektis.AGB.WebAPI.Raadplegen.DataContracts.Referentiegegevens.AdresType(
                    code = '0', 
                    omschrijving = '0', ),
        )
        """

    def testVektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres(self):
        """Test VektisAGBWebAPIRaadplegenDataContractsV2ZorgpartijZorgpartijAdres"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
